version: "3.8"

services:
    database:
        image: postgres:16
        container_name: postgres_db
        restart: always
        environment:
            POSTGRES_USER: myuser
            POSTGRES_PASSWORD: mypassword
            POSTGRES_DB: faux_api
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data

    bucket:
        image: "quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z"
        container_name: minio
        restart: unless-stopped
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: ${BUCKET_ACCESS_KEY_ID}
            MINIO_ROOT_PASSWORD: ${BUCKET_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data
        command: server /data --console-address ":9001"

    createbuckets:
        image: quay.io/minio/mc:RELEASE.2025-03-12T17-29-24Z
        depends_on:
            - bucket
        restart: on-failure
        entrypoint: >
            /bin/sh -c "
            sleep 5;
            /usr/bin/mc alias set dockerminio http://bucket:9000 ${BUCKET_ACCESS_KEY_ID} ${BUCKET_SECRET_ACCESS_KEY};
            /usr/bin/mc mb dockerminio/${BUCKET_RESOURCES};
            /usr/bin/mc mb dockerminio/${BUCKET_SYSTEM};
            exit 0;
            "

    # app:
    #     build:
    #         context: .
    #         dockerfile: Dockerfile
    #     container_name: express_app
    #     restart: unless-stopped
    #     env_file: .env
    #     environment:
    #         #kubernetes.docker.internal = localhost for docker on windows
    #         #see C:\Windows\System32\drivers\etc\hosts
    #         #
    #         # # Added by Docker Desktop
    #         # 192.168.91.145 host.docker.internal
    #         # 192.168.91.145 gateway.docker.internal
    #         # # To allow the same kube context to work on the host and the container:
    #         # 127.0.0.1 kubernetes.docker.internal
    #         #
    #         DATABASE_URL: postgresql://myuser:mypassword@kubernetes.docker.internal:5432/faux_api
    #         BUCKET_ENDPOINT: http://kubernetes.docker.internal:9000
    #     depends_on:
    #         - database
    #         - createbuckets
    #     ports:
    #         - "3000:3000"

    migrate:
        build:
            context: .
            dockerfile: Dockerfile.migrate
        depends_on:
            - database
        environment:
            DATABASE_URL: postgresql://myuser:mypassword@kubernetes.docker.internal:5432/faux_api

volumes:
    postgres_data:
        driver: local
    minio_data:
        driver: local
